static def getDeploymentVersion(String vcsTag) {
    if (vcsTag == null) {
        throw new RuntimeException("Cannot detect deployment version from 'null'")
    }
    String tmpDeploymentVersion = vcsTag.replaceFirst("v", "")
    if (!tmpDeploymentVersion.matches("\\d+\\.\\d+\\.\\d+")) {
        throw new RuntimeException("Version is not valid. Correct format is like 1.0.2 (or v1.0.2) but was " + tmpDeploymentVersion)
    }

    def qualifier = System.getProperty('qualifier')
    if (qualifier != null) {
        println "Using qualifier '" + qualifier + "' for deployment"
        tmpDeploymentVersion = tmpDeploymentVersion + "-" + qualifier
    }
    return tmpDeploymentVersion
}

static def throwEnvSetupException(String msg) {
    throw new RuntimeException("Wrongly configured environment. " + msg)
}

print "Verifying presence of deployment properties..."
project.ext['SONATYPE.userName'] = System.getProperty('SONATYPE_USER') ?: System.getenv('SONATYPE_USER') ?: throwEnvSetupException("SONATYPE_USER variable must be set to deploy")
project.ext['SONATYPE.password'] = System.getProperty('SONATYPE_PASSWORD') ?: System.getenv('SONATYPE_PASSWORD') ?: throwEnvSetupException("SONATYPE_PASSWORD variable must be set to deploy")

project.ext['signing.keyId'] = System.getProperty("SIGNING_KEY_ID") ?: System.getenv("SIGNING_KEY_ID") ?: throwEnvSetupException("SIGNING_KEY_ID variable must be set to deploy")
project.ext['signing.password'] = System.getProperty("SIGNING_KEY_PASSWORD") ?: System.getenv("SIGNING_KEY_PASSWORD") ?: throwEnvSetupException("SIGNING_KEY_PASSWORD variable must be set to deploy")
project.ext['signing.secretKeyRingFile'] = System.getProperty("SIGNING_KEY_PATH") ?: System.getenv("SIGNING_KEY_PATH") ?: throwEnvSetupException("SIGNING_KEY_PATH variable must be set to deploy")
println " ok"

print "Verifying version to deploy ..."
project.ext['versionToRelease'] = getDeploymentVersion(System.getProperty('TRAVIS_TAG') ?: System.getenv('TRAVIS_TAG') ?: System.getProperty('CIRCLE_TAG') ?: System.getenv('CIRCLE_TAG') ?: throwEnvSetupException("TRAVIS_TAG variable must be set to deploy"))
println " detected version is " + project.ext['versionToRelease']

apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'io.github.gradle-nexus.publish-plugin'

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = project['POM.groupId']
            artifactId = project['POM.artifactId']
            version = project.ext['versionToRelease']

            from(components.java)
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = "${project['POM.groupId']}:${project['POM.artifactId']}"
                description = project['POM.description']
                url = project['INFO.url']

                scm {
                    connection = "scm:git:${project['INFO.repo']}"
                    developerConnection = "scm:git:${project['INFO.repo']}"
                    url = project['INFO.repo']
                }

                licenses {
                    license {
                        name = project['INFO.licenseName']
                        url = project['INFO.licenseUrl']
                    }
                }

                developers {
                    developer {
                        name = project['INFO.mainDeveloper']
                        email = project['INFO.mainDeveloperEmail']
                        organization = project['INFO.organization']
                        organizationUrl = project['INFO.github']
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

nexusPublishing {
    repositories {
        sonatype {
            username = project.ext['SONATYPE.userName']
            password = project.ext['SONATYPE.password']
            nexusUrl.set(uri(project.ext['SONATYPE.repoUrl']))
            snapshotRepositoryUrl.set(uri(project.ext['SONATYPE.repoSnapshotsUrl']))
        }
    }
}
